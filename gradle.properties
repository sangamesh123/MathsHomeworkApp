# Project-wide Gradle settings.
#
# Gradle 9.x requires Java 17 or later to run. If your environment currently uses
# Java 11 (or any Java < 17) you will see the error:
#   "Gradle requires JVM 17 or later to run. Your build is currently configured to use JVM 11"
#
# Two options to fix this locally:
# 1) Configure Android Studio to use a newer Gradle JDK: File -> Settings -> Build, Execution, Deployment -> Build Tools -> Gradle -> Gradle JDK (choose a JDK 17+ installation or the embedded JDK).
# 2) Set Gradle to use a specific JDK by adding `org.gradle.java.home` pointing to your JDK 17+ installation path.
#
# Example (Windows) - uncomment and edit the path below to match your JDK 17+ installation:
# org.gradle.java.home=C:\\Program Files\\Java\\jdk-17
#
# If you prefer environment variables, set JAVA_HOME to your JDK 17+ and ensure it's used by Android Studio/terminal.

# Enable AndroidX and Jetifier to ensure AndroidX libraries are used and legacy support libs are migrated at build time.
android.useAndroidX=true
android.enableJetifier=true

# Specifies the JVM arguments used for the daemon process.
org.gradle.jvmargs=-Xmx1536m

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true

# Uncomment and set this to your JDK 17+ installation path if you still get JVM errors:
org.gradle.java.home=C:\\Program Files\\Java\\jdk-17
